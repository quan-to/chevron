{
    "swagger": "2.0",
    "info": {
        "description": "This is a chevron remote-signer server",
        "title": "Remote Signer API",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://tldrlegal.com/license/mit-license"
        },
        "version": "1.4"
    },
    "basePath": "/remoteSigner",
    "paths": {
        "/agent": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent"
                ],
                "summary": "Signs the request with GPG key specified by the token",
                "operationId": "agent-proxy-call",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Proxy Token generated with agentAdmin. It is required if running with authentication enabled",
                        "name": "proxyToken",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Target server URL. Defaults to environment variable AGENT_TARGET_URL",
                        "name": "serverUrl",
                        "in": "header"
                    },
                    {
                        "description": "POST Content to send signed to the target server. The message body will be sent to the target server with it's signature in a header field named 'signature'.",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result of the query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/agentAdmin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent"
                ],
                "summary": "Administration of the Agent proxy tokens.",
                "operationId": "agent-proxy-admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Proxy Token of the admin user. It is required for all calls besides the login",
                        "name": "proxyToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "The JSON content of the graphql query",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result of the query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/fieldCipher/cipher": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Field Cipher"
                ],
                "summary": "Encrypts JSON fields to specified GPG keys",
                "operationId": "field-cipher-cipher",
                "parameters": [
                    {
                        "description": "The encryption parameters",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FieldCipherInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/fieldcipher.CipherPacket"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/fieldCipher/decipher": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Field Cipher"
                ],
                "summary": "Decrypts JSON fields from specified GPG keys.",
                "operationId": "field-cipher-decipher",
                "parameters": [
                    {
                        "description": "The decryption parameters",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FieldDecipherInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/fieldcipher.DecipherPacket"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/gpg/decrypt": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GPG Operations"
                ],
                "summary": "Decrypts data using the specified GPG Key. The private key should be previously loaded.",
                "operationId": "gpg-data-decrypt",
                "parameters": [
                    {
                        "description": "Information to decrypt",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GPGDecryptData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GPGDecryptedData"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/gpg/encrypt": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GPG Operations"
                ],
                "summary": "Encrypts data for the specified GPG Public Key",
                "operationId": "gpg-data-encrypt",
                "parameters": [
                    {
                        "description": "Information to encrypt to public key",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GPGEncryptData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "wcDMA8HPMfuMKotZAQwADzmQgwJiz3p5suaYpPwCbOluqvu2O5kVitJNO86KfkSYgbR0y67c+fGk5nO+Zm66qeolXLqVBHUvSnpZf9jMupRZLRmSZ0JmmvXoJIdiahj+NLwF6NVBvmoJ8BkMEQkr5oCNkKBveaCYXdQ7Gba2buICwxxwEmq3LV6/D0Zg4AmKX/k2N1kjRGJaUeHH3oU1YEjPo3A3bo9EZLGLI+J5VSlxkydxXUkF2TISKCr2rkhUmH5E7CUFu6H2nOofxk9tJDoSfjACkEjFKdg3BbTqNlYeuNmdJHwLfHDI+WcbL3/Hsl5MVnyHGeztsj0jn2bAIcT9FHfw1W3LUpaTNlemfrn52la7zN3r2588JDRbSaqLQ/d5+3hHWyE7RsRL0jdpEj/HM3ue2mi6GfyxDZy1DxdZsy7kqoYbBIwbtCdqZetU+bH6hWk92BY89AJUpV7xPCzRozw5WvCTsPYsu10JDvvPvj1c47BA9KlJ1wTcB2lYhmoX39T3ymjMKJ+6NAOF0uAB5PToGBs3BjE4MsxQHMLchK3hTuXg+uAY4fVU4I3jFyDPs8zYKsfgCOIHYBV84Obhm9rgqOAh4Ifi+klQeOCf4+p0IGeF6b6+4IPiAtTxRuB+5KnAAWAlBpwJWAqwNJ68HIjiN9UOgeGU+wA=",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/gpg/generateKey": {
            "post": {
                "description": "Generates a new GPG Key by specifying the Identifier, Bits and Password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GPG Operations"
                ],
                "summary": "Generates a new GPG Key pair",
                "operationId": "gpg-key-generate",
                "parameters": [
                    {
                        "description": "Information to generate the key. The minimum acceptable bits is 2048.",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GPGGenerateKeyData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/gpg/sign": {
            "post": {
                "description": "Signs a payload using the specified GPG key and returns the signature in GPG Format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "GPG Operations"
                ],
                "summary": "Signs a payload with a standard GPG signature format",
                "operationId": "gpg-data-sign",
                "parameters": [
                    {
                        "description": "Data to sign",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GPGSignData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "-----BEGIN PGP SIGNATURE-----\\n\\nwsDcBAABCgAQBQJf+LriCRAFUfRSq+RjpAAAuL0MAGGrSJfK/tnMkwZ2Rkh3JcvF\\nE8WU8jwc8quz+0p9gMDscby0jShJ2G2XXMm3WAYXW88J6h8u2E/lTb6l3oBq/FPb\\n15gTM5Ie0p0kHBUlgP5bkV9EF9+VQif40fhVX7OPrS27jWtVNP374ARzSIgKMLa6\\nKBZhV1eQecLIlEYXahUP9jyt4cR4A4d9P+YJS/L6d/tQT4g9DBo66hYt5lu4sagG\\nDHsW2HK9I7fizCBaE8azLtQd3RRFTWZshln7OGVypwcdbzWbYr5uEhituxAnZKS4\\nSWwI0hgj1OkZeOhKwaydtITnaeH+nmlLBzhGKQWjCiLlsDNkkp3/4FKOuYJkYXeZ\\nm61GV6G5ZpW/gFVJXXyPz6ElNfWCorZQvxLbY4YWTBLdLyblHnp9kshav6dnexN1\\nwQyBDk8jxucmKNE8kCu591dPj/g/H38/zpGZQhj8Firb0rCFumqsAwxFeyTEFjVI\\ncyDHa5K+ytmSrITIdQUUsp1M4UQiRH63c1HYOLQurw==\\n=BRZt\\n-----END PGP SIGNATURE-----",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/gpg/signQuanto": {
            "post": {
                "description": "Signs a payload using the specified GPG key and returns the signature in Quanto Format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "GPG Operations"
                ],
                "summary": "Signs a payload with a Quanto's signature format",
                "operationId": "gpg-data-sign-quanto",
                "parameters": [
                    {
                        "description": "Data to sign",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GPGSignData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/gpg/unlockKey": {
            "post": {
                "description": "Unlocks a locked pre-loaded key inside remote signer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "GPG Operations"
                ],
                "summary": "Unlocks a pre-loaded GPG Private Key",
                "operationId": "gpg-key-unlock",
                "parameters": [
                    {
                        "description": "Unlock Data",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GPGUnlockKeyData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/gpg/verifySignature": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GPG Operations"
                ],
                "summary": "Verifies a signature in the standard GPG format",
                "operationId": "gpg-data-verify",
                "parameters": [
                    {
                        "description": "Information to verify a signature in GPG format",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GPGVerifySignatureDataNonQuanto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/gpg/verifySignatureQuanto": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GPG Operations"
                ],
                "summary": "Verifies a signature in Quanto's signature format",
                "operationId": "gpg-data-verify-quanto",
                "parameters": [
                    {
                        "description": "Information to verify a signature in quanto format",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GPGVerifySignatureData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/pks/add": {
            "post": {
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "SKS"
                ],
                "summary": "GPG SKS Keyserver add public key",
                "operationId": "hkp-add",
                "parameters": [
                    {
                        "description": "GPG Public Key",
                        "name": "publickey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/pks/lookup": {
            "get": {
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "SKS"
                ],
                "summary": "GPG SKS Keyserver lookup",
                "operationId": "hkp-lookup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "HKP Operation. Valid values: get, index, vindex",
                        "name": "op",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "HKP Operation options. Valid values: mr, nm",
                        "name": "options",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "HKP Search Value",
                        "name": "search",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result of the query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/sks/addKey": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Public Key Server",
                    "Key Store"
                ],
                "summary": "Adds a GPG Public Key",
                "operationId": "pks-add-public-key",
                "parameters": [
                    {
                        "description": "GPG Public Key in an Armored format",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SKSAddKey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/sks/addPrivateKey": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Key Ring",
                    "Key Store"
                ],
                "summary": "Adds a GPG Private Key",
                "operationId": "kre-add-private-key",
                "parameters": [
                    {
                        "description": "Private Key Information",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.KeyRingAddPrivateKeyData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GPGAddPrivateKeyReturn"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/sks/cachedKeys": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Key Ring"
                ],
                "summary": "Fetches a list of cached keys",
                "operationId": "kre-get-cached-keys",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.KeyInfo"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/sks/deletePrivateKey": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Key Ring",
                    "Key Store"
                ],
                "summary": "Deletes a GPG Private Key",
                "operationId": "kre-del-private-key",
                "parameters": [
                    {
                        "description": "Private Key Information",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.KeyRingDeletePrivateKeyData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GPGDeletePrivateKeyReturn"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/sks/getKey": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Key Ring"
                ],
                "summary": "Fetches a GPG public key",
                "operationId": "kre-get-key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fingerprint of the GPG Key to be fetched",
                        "name": "fingerPrint",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GPG public key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/sks/privateKeys": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Key Ring"
                ],
                "summary": "Fetches a list of loaded private keys",
                "operationId": "kre-get-loaded-private-keys",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.KeyInfo"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/sks/search": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public Key Server",
                    "Key Store"
                ],
                "summary": "Searches for GPG Keys by any field",
                "operationId": "pks-search-by-value",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Value of the Key to be fetched",
                        "name": "valueData",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Pagination Start Index (default: 0)",
                        "name": "pageStart",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Pagination End Index (default: 100)",
                        "name": "pageEnd",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GPGKey"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/sks/searchByEmail": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public Key Server",
                    "Key Store"
                ],
                "summary": "Searches for GPG Keys by its email",
                "operationId": "pks-search-by-email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email of the Key to be fetched",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Pagination Start Index (default: 0)",
                        "name": "pageStart",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Pagination End Index (default: 100)",
                        "name": "pageEnd",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GPGKey"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/sks/searchByFingerPrint": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public Key Server",
                    "Key Store"
                ],
                "summary": "Searches for GPG Keys by its fingerprint",
                "operationId": "pks-search-by-fingerprint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fingerprint to be fetched",
                        "name": "fingerPrint",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Pagination Start Index (default: 0)",
                        "name": "pageStart",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Pagination End Index (default: 100)",
                        "name": "pageEnd",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GPGKey"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/sks/searchByName": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public Key Server",
                    "Key Store"
                ],
                "summary": "Searches for GPG Keys by its identifier name",
                "operationId": "pks-search-by-name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the Key to be fetched",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Pagination Start Index (default: 0)",
                        "name": "pageStart",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Pagination End Index (default: 100)",
                        "name": "pageEnd",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GPGKey"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantoError.ErrorObject"
                        }
                    }
                }
            }
        },
        "/tests/ping": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Tests"
                ],
                "summary": "Checks if Chevron and its dependencies are up and ready",
                "operationId": "tests-hc-ping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "QuantoError.ErrorObject": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "example": "INVALID_FIELD_DATA"
                },
                "errorData": {
                    "type": "object"
                },
                "errorField": {
                    "type": "string",
                    "example": "fieldName"
                },
                "message": {
                    "type": "string",
                    "example": "error example"
                },
                "stackTrace": {
                    "type": "string"
                }
            }
        },
        "fieldcipher.CipherPacket": {
            "type": "object",
            "properties": {
                "encryptedJSON": {
                    "type": "object",
                    "additionalProperties": true
                },
                "encryptedKey": {
                    "type": "string",
                    "example": "wcDMA8HPMfuMKotZAQwAo62NR4snfqbT3S3EBd3xKAJjJuRx42hJU/f+p0eiQvXNuitRuLe0rF0U8YB3ArAhMX1OZ27t/QE7LKDd1T1oY28kUnHzkKzaIBoted7YXveXLRgr5WI1L6impgxlv+88C81Q6h7RqVWG2Vo6+rXdtg7GdK/VEOtJezIlRJ9Od/gBxmGFjtbSzeoQUTXyzN+xPY60PjpX1FXx+gmM1wHGvZjNLUSsMoKE01JtJJQj1kD4MX9nusp0CONzY4oCNptxgFgcSI/AFj7MZJAW9nH4yR+lQrjw+2KeAhWsWebGK4WiZFdxbEkVJ26GSawCTUqvqJJVt3R7N8vEmgNmM5u+QugM9inFQVa8SUTfqdHmpxq/QO+HtOqbsEiBZWHfNIC1muqjEshwpGhvqfajinSkyR2PbzwUgxPneTrGHiV/cG2LdriAy2zUjNSyoXsYqB9sp3gs9KdKg6nh+f0YE4fAwnb91+2B7xJz0wJFm25iAT4VkJCZjWOULVOzAEJv/38C0uAB5JjPc2wU364MKjwj+/iNutXhTHLgbeD44dmp4GfkCmlO9Hh8TM9JZXOLSgd7uODg4nkTH3ngvOIoe2BD4NTlA/sAp+tXZWRSPinNVIvt1MQgi4QcnHl3SNajPDCqZT7gSOTi7B1gegeF7uHuCeA7IaxK4qmlohvhOFAA"
                }
            }
        },
        "fieldcipher.DecipherPacket": {
            "type": "object",
            "properties": {
                "decryptedData": {
                    "type": "object",
                    "additionalProperties": true
                },
                "jsonchanged": {
                    "type": "boolean",
                    "example": false
                },
                "unmatchedFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/fieldcipher.UnmatchedField"
                    }
                }
            }
        },
        "fieldcipher.UnmatchedField": {
            "type": "object",
            "properties": {
                "expected": {
                    "type": "string",
                    "example": "/data/Test/0/test/"
                },
                "got": {
                    "type": "string",
                    "example": "/data/Test/0/name/"
                }
            }
        },
        "models.FieldCipherInput": {
            "type": "object",
            "properties": {
                "json": {
                    "type": "object",
                    "additionalProperties": true
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "0551F452ABE463A4"
                    ]
                },
                "skipFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.FieldDecipherInput": {
            "type": "object",
            "properties": {
                "encryptedJSON": {
                    "type": "object",
                    "additionalProperties": true
                },
                "encryptedKey": {
                    "type": "string"
                },
                "keyFingerprint": {
                    "type": "string"
                }
            }
        },
        "models.GPGAddPrivateKeyReturn": {
            "type": "object",
            "properties": {
                "fingerPrint": {
                    "type": "string",
                    "example": "0551F452ABE463A4"
                },
                "publicKey": {
                    "type": "string",
                    "example": "-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2\nComment: Generated by Chevron\n\n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\nFXkbQHgIocl4wcuq7ZegIr7Z7hYVd0EfOA==\n=Ufu+\n-----END PGP PUBLIC KEY BLOCK-----"
                }
            }
        },
        "models.GPGDecryptData": {
            "type": "object",
            "properties": {
                "asciiArmoredData": {
                    "type": "string",
                    "example": "wcDMA8HPMfuMKotZAQwADzmQgwJiz3p5suaYpPwCbOluqvu2O5kVitJNO86KfkSYgbR0y67c+fGk5nO+Zm66qeolXLqVBHUvSnpZf9jMupRZLRmSZ0JmmvXoJIdiahj+NLwF6NVBvmoJ8BkMEQkr5oCNkKBveaCYXdQ7Gba2buICwxxwEmq3LV6/D0Zg4AmKX/k2N1kjRGJaUeHH3oU1YEjPo3A3bo9EZLGLI+J5VSlxkydxXUkF2TISKCr2rkhUmH5E7CUFu6H2nOofxk9tJDoSfjACkEjFKdg3BbTqNlYeuNmdJHwLfHDI+WcbL3/Hsl5MVnyHGeztsj0jn2bAIcT9FHfw1W3LUpaTNlemfrn52la7zN3r2588JDRbSaqLQ/d5+3hHWyE7RsRL0jdpEj/HM3ue2mi6GfyxDZy1DxdZsy7kqoYbBIwbtCdqZetU+bH6hWk92BY89AJUpV7xPCzRozw5WvCTsPYsu10JDvvPvj1c47BA9KlJ1wTcB2lYhmoX39T3ymjMKJ+6NAOF0uAB5PToGBs3BjE4MsxQHMLchK3hTuXg+uAY4fVU4I3jFyDPs8zYKsfgCOIHYBV84Obhm9rgqOAh4Ifi+klQeOCf4+p0IGeF6b6+4IPiAtTxRuB+5KnAAWAlBpwJWAqwNJ68HIjiN9UOgeGU+wA="
                },
                "dataOnly": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.GPGDecryptedData": {
            "type": "object",
            "properties": {
                "base64Data": {
                    "type": "string",
                    "example": "SGVsbG8gd29ybGQK"
                },
                "filename": {
                    "type": "string",
                    "example": "hello world.txt"
                },
                "fingerPrint": {
                    "type": "string",
                    "example": "C1CF31FB8C2A8B59"
                },
                "isIntegrityOK": {
                    "type": "boolean",
                    "example": false
                },
                "isIntegrityProtected": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "models.GPGDeletePrivateKeyReturn": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "OK"
                }
            }
        },
        "models.GPGEncryptData": {
            "type": "object",
            "properties": {
                "base64Data": {
                    "type": "string",
                    "example": "SGVsbG8gd29ybGQK"
                },
                "dataOnly": {
                    "type": "boolean",
                    "example": true
                },
                "filename": {
                    "type": "string",
                    "example": "hello world.txt"
                },
                "fingerPrint": {
                    "type": "string",
                    "example": "0551F452ABE463A4"
                }
            }
        },
        "models.GPGGenerateKeyData": {
            "type": "object",
            "properties": {
                "bits": {
                    "type": "integer",
                    "example": 4096
                },
                "identifier": {
                    "type": "string",
                    "example": "John HUEBR \u003cjohn@huebr.com\u003e"
                },
                "password": {
                    "type": "string",
                    "example": "I think you will never guess"
                }
            }
        },
        "models.GPGKey": {
            "type": "object",
            "properties": {
                "asciiArmoredPrivateKey": {
                    "type": "string"
                },
                "asciiArmoredPublicKey": {
                    "type": "string",
                    "example": "-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2\nComment: Generated by Chevron\n\n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\nFXkbQHgIocl4wcuq7ZegIr7Z7hYVd0EfOA==\n=Ufu+\n-----END PGP PUBLIC KEY BLOCK-----"
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "test@quan.to"
                    ]
                },
                "fullFingerprint": {
                    "type": "string",
                    "example": "0551F452ABE463A4"
                },
                "id": {
                    "type": "string"
                },
                "keyBits": {
                    "type": "integer",
                    "example": 3072
                },
                "keyUids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GPGKeyUid"
                    }
                },
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Remote Signer Test"
                    ]
                },
                "parentKey": {
                    "$ref": "#/definitions/models.GPGKey"
                },
                "subkeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.GPGKeyUid": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "example": "test@quan.to"
                },
                "name": {
                    "type": "string",
                    "example": "Remote Signer Test"
                }
            }
        },
        "models.GPGSignData": {
            "type": "object",
            "properties": {
                "base64Data": {
                    "type": "string",
                    "example": "SGVsbG8gd29ybGQK"
                },
                "fingerPrint": {
                    "type": "string",
                    "example": "0551F452ABE463A4"
                }
            }
        },
        "models.GPGUnlockKeyData": {
            "type": "object",
            "properties": {
                "fingerPrint": {
                    "type": "string",
                    "example": "0551F452ABE463A4"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "models.GPGVerifySignatureData": {
            "type": "object",
            "properties": {
                "base64Data": {
                    "type": "string",
                    "example": "SGVsbG8gd29ybGQK"
                },
                "signature": {
                    "type": "string",
                    "example": "0551F452ABE463A4_SHA512_wsDcBAABCgAQBQJf+LYnCRAFUfRSq+RjpAAA7/oMACHJPMtQs4rr0uxX4AMZ8akb+x2p5ZYL+uRug+zctp82sJEJmL76HG++UyzDmMUCagJ+LBWp2RcCQvfsIhX5MqD7lPkEdtl0uNCIU40apvzn1+0kndl7LnFtzyHMWrHrRqEFGJ0E2APPqv7g1pehVKeusMOkTNUmmsJNgZBYrluZxHnai/Rudoe9jBxihY4ALF0eOyTCHbtWy0z6fll3Bo/iPe777kplDXmTBzCEM8uD3/VZmY6pGn6oXUov/z8Dcrg2x5qT4i5DgdF8OSLbsxVW2OIV8DwCicQCT2tK95fctBqJ22vfmhNlxI3KzI9ShxeV6Eci5p5Zydgoh77pDiWDysrq1dOZ+o7T+ij72K3s63w3loERFVoDxDuKG3jS3+fj+ggqqtpUpm957+9+4QlnJqZk0v9TKT661HnoH4MfZR3muBir8/dgF4mNtuQLSswOxdVs1sHSC3ssTIzzpQqeI2iy3m8Svgl5unAdv2QE81EM/wT5brc2R/abSRz52A===J34T"
                }
            }
        },
        "models.GPGVerifySignatureDataNonQuanto": {
            "type": "object",
            "properties": {
                "base64Data": {
                    "type": "string",
                    "example": "SGVsbG8gd29ybGQK"
                },
                "signature": {
                    "type": "string",
                    "example": "-----BEGIN PGP SIGNATURE-----\n\nwsDcBAABCgAQBQJf+LriCRAFUfRSq+RjpAAAuL0MAGGrSJfK/tnMkwZ2Rkh3JcvF\nE8WU8jwc8quz+0p9gMDscby0jShJ2G2XXMm3WAYXW88J6h8u2E/lTb6l3oBq/FPb\n15gTM5Ie0p0kHBUlgP5bkV9EF9+VQif40fhVX7OPrS27jWtVNP374ARzSIgKMLa6\nKBZhV1eQecLIlEYXahUP9jyt4cR4A4d9P+YJS/L6d/tQT4g9DBo66hYt5lu4sagG\nDHsW2HK9I7fizCBaE8azLtQd3RRFTWZshln7OGVypwcdbzWbYr5uEhituxAnZKS4\nSWwI0hgj1OkZeOhKwaydtITnaeH+nmlLBzhGKQWjCiLlsDNkkp3/4FKOuYJkYXeZ\nm61GV6G5ZpW/gFVJXXyPz6ElNfWCorZQvxLbY4YWTBLdLyblHnp9kshav6dnexN1\nwQyBDk8jxucmKNE8kCu591dPj/g/H38/zpGZQhj8Firb0rCFumqsAwxFeyTEFjVI\ncyDHa5K+ytmSrITIdQUUsp1M4UQiRH63c1HYOLQurw==\n=BRZt\n-----END PGP SIGNATURE-----"
                }
            }
        },
        "models.KeyInfo": {
            "type": "object",
            "properties": {
                "bits": {
                    "type": "integer",
                    "example": 3072
                },
                "containsPrivateKey": {
                    "type": "boolean",
                    "example": false
                },
                "fingerPrint": {
                    "type": "string",
                    "example": "0551F452ABE463A4"
                },
                "identifier": {
                    "type": "string",
                    "example": "Remote Signer Test \u003ctest@quan.to\u003e"
                },
                "privateKeyIsDecrypted": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "models.KeyRingAddPrivateKeyData": {
            "type": "object",
            "properties": {
                "encryptedPrivateKey": {
                    "type": "string",
                    "example": "-----BEGIN PGP PRIVATE KEY BLOCK-----\n\n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\n=Vmjb\n-----END PGP PRIVATE KEY BLOCK-----\n"
                },
                "password": {
                    "description": "Actually string, but we want to nil check it",
                    "type": "object"
                },
                "saveToDisk": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.KeyRingDeletePrivateKeyData": {
            "type": "object",
            "properties": {
                "fingerPrint": {
                    "type": "string",
                    "example": "0551F452ABE463A4"
                }
            }
        },
        "models.SKSAddKey": {
            "type": "object",
            "properties": {
                "publicKey": {
                    "type": "string",
                    "example": "-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2\nComment: Generated by Chevron\n\nxsDNBF866vQBDADFS0xTbVzEgvGi6ZklWxuNHdO6ajtodno6XgtnAX74lHCuYTUk\nKX1E6AASdXOVrw4QQV8MUI2KFs6r6UhxKcRpw3M7SGeIYkyt5uWjZBYQFnCu3V8V\nfOAdXqbPplliZhfH2UbDOaWC97J4/8kOW8iAmFEL3DpvYF7N/wFx9VkR6T8qnOhV\njKsOmyh8CcxSQ0poxKtIcCpAfpTdG2fI2maux71kI8B3Fdu/fc/3GvTvy37giz9I\n9GHGEzbrWE2FoZeF4cUJC9ZiY6/zmPcTUIhe7HGjKcEjyZ+tqQ3cvJ1lVKXvhoJp\n0+nhY4nvFVQe0jNod/duJVDGxVBPDmQIPvD5FZAtQUgX0xb5Td4s/viw/7M5XjET\nWVeg6mvxn6Xaj6oo4kQiDF+00uOfqBljXxlxFMvH2NPnmx9H7XZ7/MXWl+YotUfT\nzW0VezpE8B9gkzZVir84icb5Of38DEqUovjJVGw9pEWd+intWeEKDuXt+iv3jXbP\n31hLqMFSr4Q9/U8AEQEAAc0hUmVtb3RlIFNpZ25lciBUZXN0IDx0ZXN0QHF1YW4u\ndG8+wsEUBBMBCgA+FiEEmF9o375LjCBYKXIwBVH0UqvkY6QFAl866vQCGwMFCQPC\nZwAFCwkIBwIGFQoJCAsCBBYCAwECHgECF4AACgkQBVH0UqvkY6Qjnwv/QzU1Qq0q\n1qffvy4l6NmpQXyI6AnIO5iG97SvDwtyxdkXVmCZM52p7V4nC3IPTaKP4r2OKH3D\n1UH+T11xwgucEw67aTte7mhkODyoBJ6mNj7bYZQx5SVQYL8dWQ5JvrS4ErXchW3j\n9sYyJMqSHEzizEXtvwRVun19DMWUYdrm3flaG5o5Fvr3OxG8/N1CuLe/R7HyhnwA\noP7VRQxAz9Ln6nBjpDRK1AdZ47ZsQflkRUl3boh6pLJ4UKIg3UHSLwfie1LSBKtj\n73X+LpLvuOQHuNa14KrWTiYAsdOmRPi/9lOg8O/t6oOMngzf4VAY+tiRgCTtIqjP\nIF9+G1rEdT6oY1j7eZhAXw0om8AH5V4TuSIRcFikRyAAWrYP8DA015lGSaORJAit\n2GULUKSZszV03m3o0SR55engvjR7CRuWmTbXdH8Eb5lGDJssUPCiPtGK1Y0v5DKb\n8lV0pMa3LqR0XT6bRmgtnqDM7FB0GE7AyIz721ikEKqiY3AXMmObOo7gzsDNBF86\n6vQBDAC/myEliUXeGP5TSGW5Et4p3DkAGK76G+o43Okyv5a8zEyEhXKaeEswGHqx\nan+6wz0iIqCE3xu54Gjaugb9dnCGmq4fD2Oly3nzkuC0eVE8dA0nYVuKFQZUpKwi\nEq7+UCMkndShKYcVTvcQk58sgQfZYkXtXjmklc/eeopA+zpoLmSnYe9ZGwrzR0Yn\n9qZkPWZ8OJNrbmtB9nsKNdmxkP8gzWAYzh5MGcd15FRQwpj6XDqMRkdQXu8Yo3Zq\nFQ/zZV4D9KlpQ/sqprYSGms1nmWIVExD5zCRSUmikUSJvVeSlMAkMDEufJMSpNY8\nxyeo6wu8vNPpKUINd8ZBcAWjyMkK8XUQKtd2cTafV1HWFeae/09NkiZsfjthKOVC\nMOIZMWssTUiu7NubznbMeFgVceuE4E1n9YHe5PtI76ybL0SqLIO93dvOD+yjHoWp\ndCFq3cAS7OXz24HHtBYzS9wkj+joJhFPJSo7WD1u6l/bJSm0g8gHUNIodHEpKo4P\np6BAeHUAEQEAAcLA/AQYAQoAJhYhBJhfaN++S4wgWClyMAVR9FKr5GOkBQJfOur0\nAhsMBQkDwmcAAAoJEAVR9FKr5GOkd08MAJLmpHHF8SE2kXRfY0/3imC0lHoJj5VP\na7OZEFPm9skBzECE3cinB4crCDdhLGJEhSYnbfnq/auf7dBtZS+QjulyGHjxNDfc\nitu8zxuq12phsyXZIMgjX5Cl1V1VGH3pnVm/nuSvwZ7Urew1pJ4Ep+xtRZhcwQcC\njYT29zPpIU2oLt50LDMdNmtUYmod1N23Tcd496GKevF/a01eZ3UA779jCvC8DS1s\nWH2DTx7aWUqi8gWa4xOZsBJlyypLZDpDPETp2/+WFllWM96ubyApvkwZIOGggnwM\nQXbJ32m5vVxgQkUYl98VFEttka3rTQtP+Hnfntqj2LVl54VKUhBiGRPOC8OrpAo5\nHY/Jk2dZafMtTlbiQdgzCw3LB9n4Mc7V7d7rJT7DWq1G09lAlQWk/3r2JmBbayGp\n9UlipL+H4r4AOQirwmuaHMJ9bHCnzgAUMHomw0NDktkDnnPKZ2TxcSD9m4qgrf1q\nFXkbQHgIocl4wcuq7ZegIr7Z7hYVd0EfOA==\n=Ufu+\n-----END PGP PUBLIC KEY BLOCK-----"
                }
            }
        }
    },
    "tags": [
        {
            "description": "Operations using GPG Keys like Encrypt, Decrypt, Sign, Verify",
            "name": "GPG Operations"
        },
        {
            "description": "Operations for encrypting / decrypting JSON Data",
            "name": "Field Cipher"
        },
        {
            "description": "Operations for key load and store",
            "name": "Key Store"
        },
        {
            "description": "Operations for a REST optimized Public Key Server",
            "name": "Public Key Server"
        },
        {
            "description": "Operations for Standard PGP Public Key Server",
            "name": "SKS",
            "externalDocs": {
                "url": "https://tools.ietf.org/html/draft-shaw-openpgp-hkp-00"
            }
        },
        {
            "description": "Remote-Signer Agent for Proxied Signed Calls. This endpoint is for making a signed POST request to a target server in a transparent way.",
            "name": "Agent",
            "externalDocs": {
                "url": "https://github.com/quan-to/chevron/wiki/Quanto-Agent"
            }
        },
        {
            "description": "Key Ring Manipulation Queries",
            "name": "Key Ring"
        },
        {
            "description": "Endpoint for testing remote-signer (like health-checks)",
            "name": "Tests"
        }
    ]
}