basePath: /remoteSigner
definitions:
  QuantoError.ErrorObject:
    properties:
      errorCode:
        example: INVALID_FIELD_DATA
        type: string
      errorData:
        type: object
      errorField:
        example: fieldName
        type: string
      message:
        example: error example
        type: string
      stackTrace:
        type: string
    type: object
  fieldcipher.CipherPacket:
    properties:
      encryptedJSON:
        additionalProperties: true
        type: object
      encryptedKey:
        example: wcDMA8HPMfuMKotZAQwAo62NR4snfqbT3S3EBd3xKAJjJuRx42hJU/f+p0eiQvXNuitRuLe0rF0U8YB3ArAhMX1OZ27t/QE7LKDd1T1oY28kUnHzkKzaIBoted7YXveXLRgr5WI1L6impgxlv+88C81Q6h7RqVWG2Vo6+rXdtg7GdK/VEOtJezIlRJ9Od/gBxmGFjtbSzeoQUTXyzN+xPY60PjpX1FXx+gmM1wHGvZjNLUSsMoKE01JtJJQj1kD4MX9nusp0CONzY4oCNptxgFgcSI/AFj7MZJAW9nH4yR+lQrjw+2KeAhWsWebGK4WiZFdxbEkVJ26GSawCTUqvqJJVt3R7N8vEmgNmM5u+QugM9inFQVa8SUTfqdHmpxq/QO+HtOqbsEiBZWHfNIC1muqjEshwpGhvqfajinSkyR2PbzwUgxPneTrGHiV/cG2LdriAy2zUjNSyoXsYqB9sp3gs9KdKg6nh+f0YE4fAwnb91+2B7xJz0wJFm25iAT4VkJCZjWOULVOzAEJv/38C0uAB5JjPc2wU364MKjwj+/iNutXhTHLgbeD44dmp4GfkCmlO9Hh8TM9JZXOLSgd7uODg4nkTH3ngvOIoe2BD4NTlA/sAp+tXZWRSPinNVIvt1MQgi4QcnHl3SNajPDCqZT7gSOTi7B1gegeF7uHuCeA7IaxK4qmlohvhOFAA
        type: string
    type: object
  fieldcipher.DecipherPacket:
    properties:
      decryptedData:
        additionalProperties: true
        type: object
      jsonchanged:
        example: false
        type: boolean
      unmatchedFields:
        items:
          $ref: '#/definitions/fieldcipher.UnmatchedField'
        type: array
    type: object
  fieldcipher.UnmatchedField:
    properties:
      expected:
        example: /data/Test/0/test/
        type: string
      got:
        example: /data/Test/0/name/
        type: string
    type: object
  models.FieldCipherInput:
    properties:
      json:
        additionalProperties: true
        type: object
      keys:
        example:
        - 0551F452ABE463A4
        items:
          type: string
        type: array
      skipFields:
        items:
          type: string
        type: array
    type: object
  models.FieldDecipherInput:
    properties:
      encryptedJSON:
        additionalProperties: true
        type: object
      encryptedKey:
        type: string
      keyFingerprint:
        type: string
    type: object
  models.GPGAddPrivateKeyReturn:
    properties:
      fingerPrint:
        example: 0551F452ABE463A4
        type: string
      publicKey:
        example: |-
          -----BEGIN PGP PUBLIC KEY BLOCK-----
          Version: GnuPG v2
          Comment: Generated by Chevron

          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
          FXkbQHgIocl4wcuq7ZegIr7Z7hYVd0EfOA==
          =Ufu+
          -----END PGP PUBLIC KEY BLOCK-----
        type: string
    type: object
  models.GPGDecryptData:
    properties:
      asciiArmoredData:
        example: wcDMA8HPMfuMKotZAQwADzmQgwJiz3p5suaYpPwCbOluqvu2O5kVitJNO86KfkSYgbR0y67c+fGk5nO+Zm66qeolXLqVBHUvSnpZf9jMupRZLRmSZ0JmmvXoJIdiahj+NLwF6NVBvmoJ8BkMEQkr5oCNkKBveaCYXdQ7Gba2buICwxxwEmq3LV6/D0Zg4AmKX/k2N1kjRGJaUeHH3oU1YEjPo3A3bo9EZLGLI+J5VSlxkydxXUkF2TISKCr2rkhUmH5E7CUFu6H2nOofxk9tJDoSfjACkEjFKdg3BbTqNlYeuNmdJHwLfHDI+WcbL3/Hsl5MVnyHGeztsj0jn2bAIcT9FHfw1W3LUpaTNlemfrn52la7zN3r2588JDRbSaqLQ/d5+3hHWyE7RsRL0jdpEj/HM3ue2mi6GfyxDZy1DxdZsy7kqoYbBIwbtCdqZetU+bH6hWk92BY89AJUpV7xPCzRozw5WvCTsPYsu10JDvvPvj1c47BA9KlJ1wTcB2lYhmoX39T3ymjMKJ+6NAOF0uAB5PToGBs3BjE4MsxQHMLchK3hTuXg+uAY4fVU4I3jFyDPs8zYKsfgCOIHYBV84Obhm9rgqOAh4Ifi+klQeOCf4+p0IGeF6b6+4IPiAtTxRuB+5KnAAWAlBpwJWAqwNJ68HIjiN9UOgeGU+wA=
        type: string
      dataOnly:
        example: true
        type: boolean
    type: object
  models.GPGDecryptedData:
    properties:
      base64Data:
        example: SGVsbG8gd29ybGQK
        type: string
      filename:
        example: hello world.txt
        type: string
      fingerPrint:
        example: C1CF31FB8C2A8B59
        type: string
      isIntegrityOK:
        example: false
        type: boolean
      isIntegrityProtected:
        example: false
        type: boolean
    type: object
  models.GPGDeletePrivateKeyReturn:
    properties:
      status:
        example: OK
        type: string
    type: object
  models.GPGEncryptData:
    properties:
      base64Data:
        example: SGVsbG8gd29ybGQK
        type: string
      dataOnly:
        example: true
        type: boolean
      filename:
        example: hello world.txt
        type: string
      fingerPrint:
        example: 0551F452ABE463A4
        type: string
    type: object
  models.GPGGenerateKeyData:
    properties:
      bits:
        example: 4096
        type: integer
      identifier:
        example: John HUEBR <john@huebr.com>
        type: string
      password:
        example: I think you will never guess
        type: string
    type: object
  models.GPGKey:
    properties:
      asciiArmoredPrivateKey:
        type: string
      asciiArmoredPublicKey:
        example: |-
          -----BEGIN PGP PUBLIC KEY BLOCK-----
          Version: GnuPG v2
          Comment: Generated by Chevron

          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
          FXkbQHgIocl4wcuq7ZegIr7Z7hYVd0EfOA==
          =Ufu+
          -----END PGP PUBLIC KEY BLOCK-----
        type: string
      emails:
        example:
        - test@quan.to
        items:
          type: string
        type: array
      fullFingerprint:
        example: 0551F452ABE463A4
        type: string
      id:
        type: string
      keyBits:
        example: 3072
        type: integer
      keyUids:
        items:
          $ref: '#/definitions/models.GPGKeyUid'
        type: array
      names:
        example:
        - Remote Signer Test
        items:
          type: string
        type: array
      parentKey:
        $ref: '#/definitions/models.GPGKey'
      subkeys:
        items:
          type: string
        type: array
    type: object
  models.GPGKeyUid:
    properties:
      description:
        type: string
      email:
        example: test@quan.to
        type: string
      name:
        example: Remote Signer Test
        type: string
    type: object
  models.GPGSignData:
    properties:
      base64Data:
        example: SGVsbG8gd29ybGQK
        type: string
      fingerPrint:
        example: 0551F452ABE463A4
        type: string
    type: object
  models.GPGUnlockKeyData:
    properties:
      fingerPrint:
        example: 0551F452ABE463A4
        type: string
      password:
        example: "123456"
        type: string
    type: object
  models.GPGVerifySignatureData:
    properties:
      base64Data:
        example: SGVsbG8gd29ybGQK
        type: string
      signature:
        example: 0551F452ABE463A4_SHA512_wsDcBAABCgAQBQJf+LYnCRAFUfRSq+RjpAAA7/oMACHJPMtQs4rr0uxX4AMZ8akb+x2p5ZYL+uRug+zctp82sJEJmL76HG++UyzDmMUCagJ+LBWp2RcCQvfsIhX5MqD7lPkEdtl0uNCIU40apvzn1+0kndl7LnFtzyHMWrHrRqEFGJ0E2APPqv7g1pehVKeusMOkTNUmmsJNgZBYrluZxHnai/Rudoe9jBxihY4ALF0eOyTCHbtWy0z6fll3Bo/iPe777kplDXmTBzCEM8uD3/VZmY6pGn6oXUov/z8Dcrg2x5qT4i5DgdF8OSLbsxVW2OIV8DwCicQCT2tK95fctBqJ22vfmhNlxI3KzI9ShxeV6Eci5p5Zydgoh77pDiWDysrq1dOZ+o7T+ij72K3s63w3loERFVoDxDuKG3jS3+fj+ggqqtpUpm957+9+4QlnJqZk0v9TKT661HnoH4MfZR3muBir8/dgF4mNtuQLSswOxdVs1sHSC3ssTIzzpQqeI2iy3m8Svgl5unAdv2QE81EM/wT5brc2R/abSRz52A===J34T
        type: string
    type: object
  models.GPGVerifySignatureDataNonQuanto:
    properties:
      base64Data:
        example: SGVsbG8gd29ybGQK
        type: string
      signature:
        example: |-
          -----BEGIN PGP SIGNATURE-----

          wsDcBAABCgAQBQJf+LriCRAFUfRSq+RjpAAAuL0MAGGrSJfK/tnMkwZ2Rkh3JcvF
          E8WU8jwc8quz+0p9gMDscby0jShJ2G2XXMm3WAYXW88J6h8u2E/lTb6l3oBq/FPb
          15gTM5Ie0p0kHBUlgP5bkV9EF9+VQif40fhVX7OPrS27jWtVNP374ARzSIgKMLa6
          KBZhV1eQecLIlEYXahUP9jyt4cR4A4d9P+YJS/L6d/tQT4g9DBo66hYt5lu4sagG
          DHsW2HK9I7fizCBaE8azLtQd3RRFTWZshln7OGVypwcdbzWbYr5uEhituxAnZKS4
          SWwI0hgj1OkZeOhKwaydtITnaeH+nmlLBzhGKQWjCiLlsDNkkp3/4FKOuYJkYXeZ
          m61GV6G5ZpW/gFVJXXyPz6ElNfWCorZQvxLbY4YWTBLdLyblHnp9kshav6dnexN1
          wQyBDk8jxucmKNE8kCu591dPj/g/H38/zpGZQhj8Firb0rCFumqsAwxFeyTEFjVI
          cyDHa5K+ytmSrITIdQUUsp1M4UQiRH63c1HYOLQurw==
          =BRZt
          -----END PGP SIGNATURE-----
        type: string
    type: object
  models.KeyInfo:
    properties:
      bits:
        example: 3072
        type: integer
      containsPrivateKey:
        example: false
        type: boolean
      fingerPrint:
        example: 0551F452ABE463A4
        type: string
      identifier:
        example: Remote Signer Test <test@quan.to>
        type: string
      privateKeyIsDecrypted:
        example: false
        type: boolean
    type: object
  models.KeyRingAddPrivateKeyData:
    properties:
      encryptedPrivateKey:
        example: |
          -----BEGIN PGP PRIVATE KEY BLOCK-----

          lQWGBF866vQBDADFS0xTbVzEgvGi6ZklWxuNHdO6ajtodno6XgtnAX74lHCuYTUk
          KX1E6AASdXOVrw4QQV8MUI2KFs6r6UhxKcRpw3M7SGeIYkyt5uWjZBYQFnCu3V8V
          fOAdXqbPplliZhfH2UbDOaWC97J4/8kOW8iAmFEL3DpvYF7N/wFx9VkR6T8qnOhV
          jKsOmyh8CcxSQ0poxKtIcCpAfpTdG2fI2maux71kI8B3Fdu/fc/3GvTvy37giz9I
          9GHGEzbrWE2FoZeF4cUJC9ZiY6/zmPcTUIhe7HGjKcEjyZ+tqQ3cvJ1lVKXvhoJp
          0+nhY4nvFVQe0jNod/duJVDGxVBPDmQIPvD5FZAtQUgX0xb5Td4s/viw/7M5XjET
          WVeg6mvxn6Xaj6oo4kQiDF+00uOfqBljXxlxFMvH2NPnmx9H7XZ7/MXWl+YotUfT
          zW0VezpE8B9gkzZVir84icb5Of38DEqUovjJVGw9pEWd+intWeEKDuXt+iv3jXbP
          31hLqMFSr4Q9/U8AEQEAAf4HAwLw5t06Jvw2ff+H94DcgRkuZAHOOgLU3Nh0irKR
          RgL3RitpW0cLF3lPsqCtx4i2WLO/qDTHprcW1Oe/XtHxCOg33i1jwB8uMsUwBwes
          i4HRP0AZJXbx/UEBzqBhIGIljEXrSfrKZhv3KdZCdq7KyiNi+Nq44lk2/MPvpTaJ
          lLYFssrrWpeXhr62AXrjUItjte895G4WQ77nyHagaLG7aw+Gg2x9CtoHH3H7w7Dn
          uOHZ5p3bC1rhZfWB2drJCm4bbow4+A69Id8dSfUNSaGBdQ/LdJByT5uLQA/Q947l
          DWHi2ATz0hWaccnhXg2qNyRd08lUHxZoPNyvajHM/egBqWsDQVAjSQW37gm06ncM
          FyJvrDJdE4HhZ9S3wu/tlS5/ExH6nDGBAT9HZZmyRx6/FeLXQGsUSbIWmi+E2YbW
          XcHBSzan8dnOkCya9Pd7Rz9KxdNXhJMaSjUKlPvZfp2oEpMAQY1mSI3TZPLXWPtV
          N6EnCvUN2Upr+Emllf1aQcD+NJybB/wqHlgydYWURFUgoDrsc3YbBK7mWZVbu8lw
          bHvSWZnEfv3h3yLROqYIlo7yn0BT18U603eFU+mz4mqfsVsjXNArJNCNImGNEgYl
          GFHZ9rwgCo2Y/jlag1tKclpOTZZm/YrtV+Hebfj13zXSRtiHEaKsEQsGynv7pCYK
          nckSR1AKaBlvEjucVlOtpt0bcouC+5TWLnnR+OMihCob+pfhRyRK7ZkCvVSyh0OY
          CMT7L7IuQtfsIv6kZl80IONQaWO2EIf0w9AAdif1ROkc0OSO/EUhqwYVycPbp6vC
          dwyg0S2Ropy1XrMKbxx3mZYe/EZC+Y4pc2o5Ix7F65KEnPjF6WL9uKwJzzJmsUCt
          gWLcO9W29gKoDt19DPzYj3DMBS73NMqMnCeVHW/0Y/671y4KMdxJZCZAdkwXlA15
          11NiQbSrmW4ejbdZWYp2WG+Xc02kf5RXDE/hEzPe7JaaC5hzGz6aK1mLeP3B3H0n
          XjlPQOkPLIgvO2uNSdv53LIyCw0xNu7Qr3bj/856ETlpivZzWFGJHHPcRgL+1OO6
          OzZt5XWalsiqy24qrKdzgN0hMumDGeEee4hozH5c1XKPR0hqwoimMLQkpkfD33ST
          +CUvazEtXDtFrGSv/WOCsVzvIoNFIFLmtbxCfze7i0zNBrdHt73Dsoen3M0wTzBv
          adP8lDLzP4MmRqJqYBVapkdU7ZM9oEYZtGErcDGssA6E/Pf4m0KBYIGSaqS+SfNP
          1iIXrXbFecQgq0p8CNx9Tc55Pf/2ZktDs02BuYSMeewH97OaGZpaw+mII8pzqEfJ
          wWUc7JbsQRnu2rCdHr+HwS346MNISAdJxLQhUmVtb3RlIFNpZ25lciBUZXN0IDx0
          ZXN0QHF1YW4udG8+iQHUBBMBCgA+FiEEmF9o375LjCBYKXIwBVH0UqvkY6QFAl86
          6vQCGwMFCQPCZwAFCwkIBwIGFQoJCAsCBBYCAwECHgECF4AACgkQBVH0UqvkY6Qj
          nwv/QzU1Qq0q1qffvy4l6NmpQXyI6AnIO5iG97SvDwtyxdkXVmCZM52p7V4nC3IP
          TaKP4r2OKH3D1UH+T11xwgucEw67aTte7mhkODyoBJ6mNj7bYZQx5SVQYL8dWQ5J
          vrS4ErXchW3j9sYyJMqSHEzizEXtvwRVun19DMWUYdrm3flaG5o5Fvr3OxG8/N1C
          uLe/R7HyhnwAoP7VRQxAz9Ln6nBjpDRK1AdZ47ZsQflkRUl3boh6pLJ4UKIg3UHS
          Lwfie1LSBKtj73X+LpLvuOQHuNa14KrWTiYAsdOmRPi/9lOg8O/t6oOMngzf4VAY
          +tiRgCTtIqjPIF9+G1rEdT6oY1j7eZhAXw0om8AH5V4TuSIRcFikRyAAWrYP8DA0
          15lGSaORJAit2GULUKSZszV03m3o0SR55engvjR7CRuWmTbXdH8Eb5lGDJssUPCi
          PtGK1Y0v5DKb8lV0pMa3LqR0XT6bRmgtnqDM7FB0GE7AyIz721ikEKqiY3AXMmOb
          Oo7gnQWGBF866vQBDAC/myEliUXeGP5TSGW5Et4p3DkAGK76G+o43Okyv5a8zEyE
          hXKaeEswGHqxan+6wz0iIqCE3xu54Gjaugb9dnCGmq4fD2Oly3nzkuC0eVE8dA0n
          YVuKFQZUpKwiEq7+UCMkndShKYcVTvcQk58sgQfZYkXtXjmklc/eeopA+zpoLmSn
          Ye9ZGwrzR0Yn9qZkPWZ8OJNrbmtB9nsKNdmxkP8gzWAYzh5MGcd15FRQwpj6XDqM
          RkdQXu8Yo3ZqFQ/zZV4D9KlpQ/sqprYSGms1nmWIVExD5zCRSUmikUSJvVeSlMAk
          MDEufJMSpNY8xyeo6wu8vNPpKUINd8ZBcAWjyMkK8XUQKtd2cTafV1HWFeae/09N
          kiZsfjthKOVCMOIZMWssTUiu7NubznbMeFgVceuE4E1n9YHe5PtI76ybL0SqLIO9
          3dvOD+yjHoWpdCFq3cAS7OXz24HHtBYzS9wkj+joJhFPJSo7WD1u6l/bJSm0g8gH
          UNIodHEpKo4Pp6BAeHUAEQEAAf4HAwINyD8NsioQ3f9JuSBp13mZxTzIVy9mrrXv
          IGNjjIZ7W+r+cuzadTM2qgGZGRzmK+xoeHPnvhtPDQT0haW0C/sVQt1qESBRTPkC
          y+K86m4+Qk3RloDACbxLmEVKtAdMniMi0izjfRSahP8kyLyGJ8i+9aUd6Uud3soa
          VNrIIRB88oZxRhokaiRfW90tgfRdP1qnkVYqj5PfPQY+OxRLY+pschlI8n1IMaCS
          yqTrBO3EqgyZc07/lQMh48rgXqJXjB3rZaRtyovr1vaRpkoWMxNa91cCcBnlUo70
          hGOpmar0I/efbs9/ZBKbqi58N247BMDmu2ykZc0mZaCXxM/87VoYLxaasEna4LkN
          3mdOe4yFVIQfhdKtlS4VnecROgPOgG/UwF0GdB5w1rFBVEutxqIrJfwq7NNSEuPh
          2R7LOL0kMtVVIk4MsYi34OAdECc1RzPhXOmJriQcLu5m0GAQy9cY4KmAM7Nhe7qU
          5FPqAFDbUJXzlAm/Vt1UXeVTk6xsOWH+AoM4/sceCXFLayZYV98eXwmyF8sTGfG/
          D1T3z2eAbhNP4Q31Fl1VVj+8/jGcTKGGuMgld94eKcvp9YGgy9/CB884Wn0Vg9Cd
          Zczgon2IXosVEV2NVPGOTSVO0h//WYDBFfUuJoPzPDd8s0Hd1/hfoia7k9CLZIEH
          fOI+YjVobDzvHZTpvELp7i4AmkV2pstrWY7GtaDu6wZUjKzht/oqHEUTcl0j4IP2
          CXdg+RWtGwWn3maTRDAc/5BtoGd1Sij5Up0Y8LIO8baIb6S0KjpP7kb9y4/0/cYx
          uZFQNir2PNnKRbpAkcswNw1qQXT9QRQdX+6gbwo7Q/gGuh+Px+YJfy3lKqRSgWe8
          owGvLjI7S8LbGhUTsBqKvKq9dciuscAXSrx/n/gYv99ae3Ox6WhiO697XjQkYX5U
          R7TVJHcXin+Gk4frs0wSJGqnHxvm98yKBA7yMnvkCaxdBn/2v6W+eWed2/dVFB7M
          pOslo/n/IhLEOIbyvDk+Fz1Bzk9w0e/02uquxXPWa2Z30kYRLvwN9jf9HWDvLoTE
          y5xLNElMl2U5Gl/QTFuiW+y4Yn86KtdcGERdyCClMF4BDs4vHlLhORUC9LOXroHa
          ZZGhgf9U4Z2WKgPIwkXSk0ziQ+F1bhX4nKepcv5o4ZURMh+BLhOuaYhLjIjGOdn3
          anUX8uyDeXmk5UCGldUpCQHqGLy8jdxzMit2shH8YI67tvlGDFsu3gpzYMUzW521
          2S3jqCP4uqmkkBLspwGf8KtHpC91FLfTf0lCsi/HYMKGQgEur+JT8V5wca2KgFYC
          UWUBq4iciFh5dfldqLAdn9Rh0/xoNICqm6ueHokBvAQYAQoAJhYhBJhfaN++S4wg
          WClyMAVR9FKr5GOkBQJfOur0AhsMBQkDwmcAAAoJEAVR9FKr5GOkd08MAJLmpHHF
          8SE2kXRfY0/3imC0lHoJj5VPa7OZEFPm9skBzECE3cinB4crCDdhLGJEhSYnbfnq
          /auf7dBtZS+QjulyGHjxNDfcitu8zxuq12phsyXZIMgjX5Cl1V1VGH3pnVm/nuSv
          wZ7Urew1pJ4Ep+xtRZhcwQcCjYT29zPpIU2oLt50LDMdNmtUYmod1N23Tcd496GK
          evF/a01eZ3UA779jCvC8DS1sWH2DTx7aWUqi8gWa4xOZsBJlyypLZDpDPETp2/+W
          FllWM96ubyApvkwZIOGggnwMQXbJ32m5vVxgQkUYl98VFEttka3rTQtP+Hnfntqj
          2LVl54VKUhBiGRPOC8OrpAo5HY/Jk2dZafMtTlbiQdgzCw3LB9n4Mc7V7d7rJT7D
          Wq1G09lAlQWk/3r2JmBbayGp9UlipL+H4r4AOQirwmuaHMJ9bHCnzgAUMHomw0ND
          ktkDnnPKZ2TxcSD9m4qgrf1qFXkbQHgIocl4wcuq7ZegIr7Z7hYVd0EfOA==
          =Vmjb
          -----END PGP PRIVATE KEY BLOCK-----
        type: string
      password:
        description: Actually string, but we want to nil check it
        type: object
      saveToDisk:
        example: true
        type: boolean
    type: object
  models.KeyRingDeletePrivateKeyData:
    properties:
      fingerPrint:
        example: 0551F452ABE463A4
        type: string
    type: object
  models.SKSAddKey:
    properties:
      publicKey:
        example: |-
          -----BEGIN PGP PUBLIC KEY BLOCK-----
          Version: GnuPG v2
          Comment: Generated by Chevron

          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
          FXkbQHgIocl4wcuq7ZegIr7Z7hYVd0EfOA==
          =Ufu+
          -----END PGP PUBLIC KEY BLOCK-----
        type: string
    type: object
info:
  contact: {}
  description: This is a chevron remote-signer server
  license:
    name: MIT
    url: https://tldrlegal.com/license/mit-license
  title: Remote Signer API
  version: "1.4"
paths:
  /agent:
    post:
      consumes:
      - application/json
      operationId: agent-proxy-call
      parameters:
      - description: Proxy Token generated with agentAdmin. It is required if running
          with authentication enabled
        in: header
        name: proxyToken
        type: string
      - description: Target server URL. Defaults to environment variable AGENT_TARGET_URL
        in: header
        name: serverUrl
        type: string
      - description: POST Content to send signed to the target server. The message
          body will be sent to the target server with it's signature in a header field
          named 'signature'.
        in: body
        name: message
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: result of the query
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Signs the request with GPG key specified by the token
      tags:
      - Agent
  /agentAdmin:
    post:
      consumes:
      - application/json
      operationId: agent-proxy-admin
      parameters:
      - description: Proxy Token of the admin user. It is required for all calls besides
          the login
        in: header
        name: proxyToken
        required: true
        type: string
      - description: The JSON content of the graphql query
        in: body
        name: message
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: result of the query
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Administration of the Agent proxy tokens.
      tags:
      - Agent
  /fieldCipher/cipher:
    post:
      consumes:
      - application/json
      operationId: field-cipher-cipher
      parameters:
      - description: The encryption parameters
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.FieldCipherInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fieldcipher.CipherPacket'
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Encrypts JSON fields to specified GPG keys
      tags:
      - Field Cipher
  /fieldCipher/decipher:
    post:
      consumes:
      - application/json
      operationId: field-cipher-decipher
      parameters:
      - description: The decryption parameters
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.FieldDecipherInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fieldcipher.DecipherPacket'
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Decrypts JSON fields from specified GPG keys.
      tags:
      - Field Cipher
  /gpg/decrypt:
    post:
      consumes:
      - application/json
      operationId: gpg-data-decrypt
      parameters:
      - description: Information to decrypt
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.GPGDecryptData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GPGDecryptedData'
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Decrypts data using the specified GPG Key. The private key should be
        previously loaded.
      tags:
      - GPG Operations
  /gpg/encrypt:
    post:
      consumes:
      - application/json
      operationId: gpg-data-encrypt
      parameters:
      - description: Information to encrypt to public key
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.GPGEncryptData'
      produces:
      - application/json
      responses:
        "200":
          description: wcDMA8HPMfuMKotZAQwADzmQgwJiz3p5suaYpPwCbOluqvu2O5kVitJNO86KfkSYgbR0y67c+fGk5nO+Zm66qeolXLqVBHUvSnpZf9jMupRZLRmSZ0JmmvXoJIdiahj+NLwF6NVBvmoJ8BkMEQkr5oCNkKBveaCYXdQ7Gba2buICwxxwEmq3LV6/D0Zg4AmKX/k2N1kjRGJaUeHH3oU1YEjPo3A3bo9EZLGLI+J5VSlxkydxXUkF2TISKCr2rkhUmH5E7CUFu6H2nOofxk9tJDoSfjACkEjFKdg3BbTqNlYeuNmdJHwLfHDI+WcbL3/Hsl5MVnyHGeztsj0jn2bAIcT9FHfw1W3LUpaTNlemfrn52la7zN3r2588JDRbSaqLQ/d5+3hHWyE7RsRL0jdpEj/HM3ue2mi6GfyxDZy1DxdZsy7kqoYbBIwbtCdqZetU+bH6hWk92BY89AJUpV7xPCzRozw5WvCTsPYsu10JDvvPvj1c47BA9KlJ1wTcB2lYhmoX39T3ymjMKJ+6NAOF0uAB5PToGBs3BjE4MsxQHMLchK3hTuXg+uAY4fVU4I3jFyDPs8zYKsfgCOIHYBV84Obhm9rgqOAh4Ifi+klQeOCf4+p0IGeF6b6+4IPiAtTxRuB+5KnAAWAlBpwJWAqwNJ68HIjiN9UOgeGU+wA=
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Encrypts data for the specified GPG Public Key
      tags:
      - GPG Operations
  /gpg/generateKey:
    post:
      consumes:
      - application/json
      description: Generates a new GPG Key by specifying the Identifier, Bits and
        Password
      operationId: gpg-key-generate
      parameters:
      - description: Information to generate the key. The minimum acceptable bits
          is 2048.
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.GPGGenerateKeyData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Generates a new GPG Key pair
      tags:
      - GPG Operations
  /gpg/sign:
    post:
      consumes:
      - application/json
      description: Signs a payload using the specified GPG key and returns the signature
        in GPG Format
      operationId: gpg-data-sign
      parameters:
      - description: Data to sign
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.GPGSignData'
      produces:
      - text/plain
      responses:
        "200":
          description: '-----BEGIN PGP SIGNATURE-----\n\nwsDcBAABCgAQBQJf+LriCRAFUfRSq+RjpAAAuL0MAGGrSJfK/tnMkwZ2Rkh3JcvF\nE8WU8jwc8quz+0p9gMDscby0jShJ2G2XXMm3WAYXW88J6h8u2E/lTb6l3oBq/FPb\n15gTM5Ie0p0kHBUlgP5bkV9EF9+VQif40fhVX7OPrS27jWtVNP374ARzSIgKMLa6\nKBZhV1eQecLIlEYXahUP9jyt4cR4A4d9P+YJS/L6d/tQT4g9DBo66hYt5lu4sagG\nDHsW2HK9I7fizCBaE8azLtQd3RRFTWZshln7OGVypwcdbzWbYr5uEhituxAnZKS4\nSWwI0hgj1OkZeOhKwaydtITnaeH+nmlLBzhGKQWjCiLlsDNkkp3/4FKOuYJkYXeZ\nm61GV6G5ZpW/gFVJXXyPz6ElNfWCorZQvxLbY4YWTBLdLyblHnp9kshav6dnexN1\nwQyBDk8jxucmKNE8kCu591dPj/g/H38/zpGZQhj8Firb0rCFumqsAwxFeyTEFjVI\ncyDHa5K+ytmSrITIdQUUsp1M4UQiRH63c1HYOLQurw==\n=BRZt\n-----END
            PGP SIGNATURE-----'
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Signs a payload with a standard GPG signature format
      tags:
      - GPG Operations
  /gpg/signQuanto:
    post:
      consumes:
      - application/json
      description: Signs a payload using the specified GPG key and returns the signature
        in Quanto Format
      operationId: gpg-data-sign-quanto
      parameters:
      - description: Data to sign
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.GPGSignData'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Signs a payload with a Quanto's signature format
      tags:
      - GPG Operations
  /gpg/unlockKey:
    post:
      consumes:
      - application/json
      description: Unlocks a locked pre-loaded key inside remote signer
      operationId: gpg-key-unlock
      parameters:
      - description: Unlock Data
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.GPGUnlockKeyData'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Unlocks a pre-loaded GPG Private Key
      tags:
      - GPG Operations
  /gpg/verifySignature:
    post:
      consumes:
      - application/json
      operationId: gpg-data-verify
      parameters:
      - description: Information to verify a signature in GPG format
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.GPGVerifySignatureDataNonQuanto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Verifies a signature in the standard GPG format
      tags:
      - GPG Operations
  /gpg/verifySignatureQuanto:
    post:
      consumes:
      - application/json
      operationId: gpg-data-verify-quanto
      parameters:
      - description: Information to verify a signature in quanto format
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.GPGVerifySignatureData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Verifies a signature in Quanto's signature format
      tags:
      - GPG Operations
  /pks/add:
    post:
      consumes:
      - text/plain
      operationId: hkp-add
      parameters:
      - description: GPG Public Key
        in: body
        name: publickey
        required: true
        schema:
          type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: GPG SKS Keyserver add public key
      tags:
      - SKS
  /pks/lookup:
    get:
      consumes:
      - text/plain
      operationId: hkp-lookup
      parameters:
      - description: 'HKP Operation. Valid values: get, index, vindex'
        in: query
        name: op
        required: true
        type: string
      - description: 'HKP Operation options. Valid values: mr, nm'
        in: query
        name: options
        required: true
        type: string
      - description: HKP Search Value
        in: query
        name: search
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: result of the query
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: GPG SKS Keyserver lookup
      tags:
      - SKS
  /sks/addKey:
    post:
      consumes:
      - application/json
      operationId: pks-add-public-key
      parameters:
      - description: GPG Public Key in an Armored format
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.SKSAddKey'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Adds a GPG Public Key
      tags:
      - Public Key Server
      - Key Store
  /sks/addPrivateKey:
    post:
      operationId: kre-add-private-key
      parameters:
      - description: Private Key Information
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.KeyRingAddPrivateKeyData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GPGAddPrivateKeyReturn'
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Adds a GPG Private Key
      tags:
      - Key Ring
      - Key Store
  /sks/cachedKeys:
    get:
      operationId: kre-get-cached-keys
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.KeyInfo'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Fetches a list of cached keys
      tags:
      - Key Ring
  /sks/deletePrivateKey:
    post:
      operationId: kre-del-private-key
      parameters:
      - description: Private Key Information
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.KeyRingDeletePrivateKeyData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GPGDeletePrivateKeyReturn'
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Deletes a GPG Private Key
      tags:
      - Key Ring
      - Key Store
  /sks/getKey:
    get:
      operationId: kre-get-key
      parameters:
      - description: Fingerprint of the GPG Key to be fetched
        in: query
        name: fingerPrint
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: GPG public key
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Fetches a GPG public key
      tags:
      - Key Ring
  /sks/privateKeys:
    get:
      operationId: kre-get-loaded-private-keys
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.KeyInfo'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Fetches a list of loaded private keys
      tags:
      - Key Ring
  /sks/search:
    get:
      operationId: pks-search-by-value
      parameters:
      - description: Value of the Key to be fetched
        in: query
        name: valueData
        required: true
        type: string
      - description: 'Pagination Start Index (default: 0)'
        in: query
        name: pageStart
        type: integer
      - description: 'Pagination End Index (default: 100)'
        in: query
        name: pageEnd
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GPGKey'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Searches for GPG Keys by any field
      tags:
      - Public Key Server
      - Key Store
  /sks/searchByEmail:
    get:
      operationId: pks-search-by-email
      parameters:
      - description: Email of the Key to be fetched
        in: query
        name: email
        required: true
        type: string
      - description: 'Pagination Start Index (default: 0)'
        in: query
        name: pageStart
        type: integer
      - description: 'Pagination End Index (default: 100)'
        in: query
        name: pageEnd
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GPGKey'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Searches for GPG Keys by its email
      tags:
      - Public Key Server
      - Key Store
  /sks/searchByFingerPrint:
    get:
      operationId: pks-search-by-fingerprint
      parameters:
      - description: Fingerprint to be fetched
        in: query
        name: fingerPrint
        required: true
        type: string
      - description: 'Pagination Start Index (default: 0)'
        in: query
        name: pageStart
        type: integer
      - description: 'Pagination End Index (default: 100)'
        in: query
        name: pageEnd
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GPGKey'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Searches for GPG Keys by its fingerprint
      tags:
      - Public Key Server
      - Key Store
  /sks/searchByName:
    get:
      operationId: pks-search-by-name
      parameters:
      - description: Name of the Key to be fetched
        in: query
        name: name
        required: true
        type: string
      - description: 'Pagination Start Index (default: 0)'
        in: query
        name: pageStart
        type: integer
      - description: 'Pagination End Index (default: 100)'
        in: query
        name: pageEnd
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GPGKey'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/QuantoError.ErrorObject'
      summary: Searches for GPG Keys by its identifier name
      tags:
      - Public Key Server
      - Key Store
  /tests/ping:
    get:
      operationId: tests-hc-ping
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "503":
          description: Service Unavailable
          schema:
            type: string
      summary: Checks if Chevron and its dependencies are up and ready
      tags:
      - Tests
swagger: "2.0"
tags:
- description: Operations using GPG Keys like Encrypt, Decrypt, Sign, Verify
  name: GPG Operations
- description: Operations for encrypting / decrypting JSON Data
  name: Field Cipher
- description: Operations for key load and store
  name: Key Store
- description: Operations for a REST optimized Public Key Server
  name: Public Key Server
- description: Operations for Standard PGP Public Key Server
  externalDocs:
    url: https://tools.ietf.org/html/draft-shaw-openpgp-hkp-00
  name: SKS
- description: Remote-Signer Agent for Proxied Signed Calls. This endpoint is for
    making a signed POST request to a target server in a transparent way.
  externalDocs:
    url: https://github.com/quan-to/chevron/wiki/Quanto-Agent
  name: Agent
- description: Key Ring Manipulation Queries
  name: Key Ring
- description: Endpoint for testing remote-signer (like health-checks)
  name: Tests
